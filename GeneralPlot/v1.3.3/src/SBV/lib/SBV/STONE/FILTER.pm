package SBV::STONE::FILTER;
#------------------------------------------------+
#    [APM] This moudle is generated by amp.pl    |
#    [APM] Created time: 2013-07-22 08:51:07     |
#------------------------------------------------+
=pod

=head1 Name

SBV::STONE::FILTER

=head1 Synopsis

This module is not meant to be used directly

=head1 Desc

used to add filter for SVG graph

=head1 Feedback

Author: Peng Ai
Email:  aipeng0520@163.com

=head1 Version

Version history

=head2 v1.0

Date: 2013-07-22 08:51:07

=cut


use strict;
use warnings;
require Exporter;
our @ISA = qw(Exporter);
our @EXPORT    = qw(filter);

use FindBin;
use lib "$FindBin::RealBin";
use lib "$FindBin::RealBin/../";
use lib "$FindBin::RealBin/lib";
use lib "$FindBin::RealBin/../lib";

sub filter
{
	my $type = shift || "01";

	my $id = "filter" . $SBV::idnum;
	$SBV::idnum ++;
	
	my $filter = $SBV::svg->defs()->filter(id=>"$id");
	
	if ($type eq "01")
	{
		$filter->fe(-type=>'Offset',in=>'SourceAlpha',dx=>3,dy=>3,result=>'offOut');
		$filter->fe(-type=>'GaussianBlur',in=>"offOut",stdDeviation=>4,result=>'blurOut');
		$filter->fe(-type=>'Blend',in=>'SourceGraphic',in2=>'blurOut');
	}
	elsif ($type eq "02")
	{
		$filter->fe(-type=>'Offset',in=>'SourceGraphic',dx=>0,dy=>20,result=>'offOut');
		$filter->fe(-type=>'GaussianBlur',in=>"offOut",stdDeviation=>3,result=>'blurOut');
		$filter->fe(-type=>'Blend',in=>'SourceGraphic',in2=>'blurOut');
	}

	return $id;
}
